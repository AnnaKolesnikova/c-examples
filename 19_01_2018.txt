#define _CRT_SECURE_NO_WARNINGS

#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<time.h>
#include<String.h>

int main()
{ 
	int * x = NULL, n;

	do
	{
		printf("\nVvedite razmer massiva: ");
		scanf("%d", &n);
	}
	while(n < 1);

	//динамиччески выделяем память под одномерный массив целого типа
	x = (int*)malloc(n * sizeof(int));
	if(x == NULL)
	{
		printf("\nPamiat ne videlena!!!\n");
		_getch();
		return 0;
	}
	printf("\n\nx = %d\n", x);

	printf("\n\n\nSoderjimoe sozdannogo massiva:\n\n");
	for(int i = 0; i < n; i++)
	{
		printf("%d ", x[i]);
	}

	//заполняем данными
	for(int i = 0; i < n; i++)
	{
		x[i] = 1 + rand() % (n - 1 + 1);
	}

	printf("\n\n\nSoderjimoe zapolnennogo massiva:\n\n");
	for(int i = 0; i < n; i++)
	{
		printf("%d ", x[i]);
	}

	//работаем с одномерным динамическим массивом

	//овобождаем память
	free(x);
	//x = NULL;

	printf("\n\nx = %d\n", x);
	printf("\n\n\nSoderjimoe massiva posle vizova funkcii free:\n\n");
	for(int i = 0; i < n; i++)
	{
		printf("%d ", x[i]);
	}


	printf("\n\n\nThe end!!!\n");
	_getch();
	return 0;
}

/////////////////////////

#define _CRT_SECURE_NO_WARNINGS

#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<time.h>
#include<String.h>

int main()
{ 
	int * x = NULL, n;

	do
	{
		printf("\nVvedite razmer massiva: ");
		scanf("%d", &n);
	}
	while(n < 1);

	//динамиччески выделяем память под одномерный массив целого типа
	x = (int*)calloc(n, sizeof(int));
	if(x == NULL)
	{
		printf("\nPamiat ne videlena!!!\n");
		_getch();
		return 0;
	}
	printf("\n\nx = %d\n", x);

	printf("\n\n\nSoderjimoe sozdannogo massiva:\n\n");
	for(int i = 0; i < n; i++)
	{
		printf("%d ", x[i]);
	}

	//заполняем данными
	for(int i = 0; i < n; i++)
	{
		x[i] = 1 + rand() % (n - 1 + 1);
	}

	printf("\n\n\nSoderjimoe zapolnennogo massiva:\n\n");
	for(int i = 0; i < n; i++)
	{
		printf("%d ", x[i]);
	}

	//работаем с одномерным динамическим массивом

	//овобождаем память
	free(x);
	//x = NULL;

	printf("\n\nx = %d\n", x);
	printf("\n\n\nSoderjimoe massiva posle vizova funkcii free:\n\n");
	for(int i = 0; i < n; i++)
	{
		printf("%d ", x[i]);
	}


	printf("\n\n\nThe end!!!\n");
	_getch();
	return 0;
}


/////////////////////////////

#define _CRT_SECURE_NO_WARNINGS

#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<time.h>
#include<String.h>

void vvod_mas(int *, const int);
void vvod_mas(int * p, const int k)
{
	for(int i = 0; i < k; i++)
	{
		printf("Vvedite x[%d] = ", i);
		scanf("%d", &p[i]);
	}
}

void vivod_mas(int *, const int);
void vivod_mas(int * p, const int k){
	printf("\n\n");
	for(int i = 0; i < k; i++)
	{
		printf("%d ", p[i]);
	}
	printf("\n\n");
} 

int main()
{ 
	int n, k = 0;
	int * x, * y;

	do
	{
		printf("\nVvedite razmer massiva: ");
		scanf("%d", &n);
	}
	while(n < 1);
	 
	x = (int *)malloc(n * sizeof(int));
	if(x == NULL)
	{
		printf("\nPamiat ne videlena!!!\n");
		_getch();
		return 0;
	}

	vvod_mas(x, n);
	printf("\n\n\nsoderjomoe massiva:\n\n");
	vivod_mas(x, n);

	for(int i = 0; i < n - k; i++)
	{
		if(x[i] == 5)
		{
			k++;
			printf("\nk = %d\n", k);
			for(int j = i + 1; j <= n - k; j++)
			{
				x[j-1] = x[j];
			}
			i--;
		}
	}
	
	n = n - k;
	y = (int*)realloc(x, n * sizeof(int));
	if(y != NULL)
	{
		x = y;
	}
	else
	{
		return 0;
	}

	printf("\nsoderjimoe new massiva:\n");
	vivod_mas(x, n);
	
	printf("\n\n\nThe end!!!\n");
	_getch();
	return 0;
}


////////////////////////////////


#define _CRT_SECURE_NO_WARNINGS

#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<time.h>
#include<String.h>



int main()
{ 
	srand(time(NULL));
	int ** y, n, m;

	do
	{
		printf("\nVvedite kolichestvo strok v massive: ");
		scanf("%d", &n);
	}
	while(n < 1);

	do
	{
		printf("\nVvedite kolichestvo stolbcov v massive: ");
		scanf("%d", &m);
	}
	while(m < 1);

	y = (int**)malloc(n * sizeof(int*));
	if(y == NULL)
	{
		printf("\nPamiat ne videlena!!!\n");
		_getch();
		return 0;
	}

	for(int i = 0; i < n; i++)
	{
		y[i] = (int*)malloc(m * sizeof(int));
		if(y[i] == NULL)
		{
			printf("\nPamiat ne videlena!!!\n");
			_getch();
			return 0;
		}
	}

	for(int i = 0; i < n; i++)
	{
		for(int j = 0; j < m; j++)
		{
			y[i][j] = 1 + rand() % (999 - 1 + 1);
		}
	}

	printf("\n\n\n");
	for(int i = 0; i < n; i++)
	{
		for(int j = 0; j < m; j++)
		{
			printf("%-5d", y[i][j]);
		}
		printf("\n\n\n");
	}

	//работаем с двумерным динамическим массивом

	for(int i = 0; i < n; i++)
	{
		free(y[i]);
	}

	free(y);
		
	printf("\n\n\nThe end!!!\n");
	_getch();
	return 0;
}

